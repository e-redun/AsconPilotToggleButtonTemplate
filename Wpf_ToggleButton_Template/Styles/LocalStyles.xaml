<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Ascon.Pilot.Theme;assembly=Ascon.Pilot.Theme"
                    xmlns:tools="clr-namespace:Ascon.Pilot.Theme.Tools;assembly=Ascon.Pilot.Theme"
                    >
    <ResourceDictionary.MergedDictionaries>
        <tools:SharedResourceDictionary Source="/Ascon.Pilot.Theme;component/Themes/SharedResources/SharedResources.xaml"/>
        <tools:SharedResourceDictionary Source="/Ascon.Pilot.Theme;component/Themes/standardcontrols/textblock.xaml"/>
        <tools:SharedResourceDictionary Source="/Ascon.Pilot.Theme;component/Themes/StandardControls/ComboBox.xaml"/>
        <tools:SharedResourceDictionary Source="/Ascon.Pilot.Theme;component/Themes/StandardControls/Calendar.xaml"/>
        <tools:SharedResourceDictionary Source="/Ascon.Pilot.Theme;component/Themes/StandardControls/CheckBox.xaml"/>
        <tools:SharedResourceDictionary Source="/Ascon.Pilot.Theme;component/Themes/StandardControls/ToggleButton.xaml"/>
        <tools:SharedResourceDictionary Source="/Ascon.Pilot.Theme;component/Themes/ButtonEdit.xaml"/>
        <ResourceDictionary Source="/Ascon.Pilot.Theme;component/themes/standardcontrols.xaml"/>
        <!--<ResourceDictionary Source="/Ascon.Pilot.Theme;component/themes/standardcontrols/CheckBox.xaml"/>-->
    </ResourceDictionary.MergedDictionaries>

    <!--<Style x:Key="MyToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource HoverBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderNormalBrush}" />
                <Setter Property="Foreground" Value="{StaticResource NormalForeground}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource SelectedBorder}" />
                <Setter Property="Foreground" Value="{StaticResource NormalForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource SelectedBorder}" />
                <Setter Property="Foreground" Value="{StaticResource NormalForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource DisabledBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource DisabledForeground}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsEnabled" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                <Setter Property="Foreground" Value="{StaticResource ReadOnlyForeground}" />
            </MultiTrigger>
        </Style.Triggers>
        <Setter Property="BorderBrush" Value="{StaticResource BorderNormalBrush}" />
        <Setter Property="Background" Value="{StaticResource NormalBackground}" />
        <Setter Property="Foreground" Value="{StaticResource NormalForeground}" />
        <Setter Property="BorderThickness" Value="{tools:DeviceDependentThickness Thickness=1}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="9,4,9,5" />
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Padding="{TemplateBinding Padding}" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" EdgeMode="Aliased">
                            <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" Margin="1" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HyperlinkToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Text="{TemplateBinding Content}" Style="{DynamicResource {theme:StyleKey HyperlinkTextBlockStyle}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HyperlinkCommandToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Text="{TemplateBinding Content}" Style="{DynamicResource {theme:StyleKey HyperlinkCommandTextBlockStyle}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PseudoHyperlinkToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource ReadOnlyForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource HyperlinkHoverForeground}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="{StaticResource NormalForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <TextBlock Name="tb" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource {theme:StyleKey PseudoHyperlinkTextBlockStyle}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HoverableToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource HoverBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource SelectedBackgroundHover}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="{StaticResource NormalForeground}" />
        <Setter Property="Background" Value="{StaticResource NormalBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid Background="{TemplateBinding Background}">
                        <TextBlock Name="tb" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" TextWrapping="Wrap" Margin="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImageToggleButtonStyleBase" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource HoverBackground}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource NormalBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="29" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Name="Container" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StretchedImageToggleButtonStyleBase" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource ControlHoverBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ControlHoverBackgroundBrush}" />
                <Setter Property="Padding" Value="1" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource ControlPressedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ControlPressedBackgroundBrush}" />
                <Setter Property="Padding" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource ControlPressedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ControlPressedBackgroundBrush}" />
                <Setter Property="Padding" Value="1" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Name="Container" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{theme:StyleKey ImageToggleButtonStyle}" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ImageToggleButtonStyleBase}" />
    <Style x:Key="NavigationBarToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ImageToggleButtonStyleBase}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="BorderThickness" Value="{tools:DeviceDependentThickness Thickness=1}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource NormalForeground}" />
    </Style>
    <Style x:Key="{theme:StyleKey BorderImageToggleButtonStyle}" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ImageToggleButtonStyleBase}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource HoverBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderNormalBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource SelectedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource DisabledBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource DisabledForeground}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource SelectedBorder}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="BorderThickness" Value="{tools:DeviceDependentThickness Thickness=1}" />
        <Setter Property="BorderBrush" Value="{StaticResource LightBorder}" />
    </Style>
    <Style x:Key="{theme:StyleKey InplaceImageToggleButtonStyle}" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ImageToggleButtonStyleBase}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource ControlHoverBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ControlHoverBackgroundBrush}" />
                <Setter Property="Padding" Value="1" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource ControlPressedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ControlPressedBackgroundBrush}" />
                <Setter Property="Padding" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource ControlPressedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ControlPressedBackgroundBrush}" />
                <Setter Property="Padding" Value="1" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Width" Value="26" />
        <Setter Property="BorderThickness" Value="{tools:DeviceDependentThickness Thickness=1}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlNormalBackgroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ControlNormalBackgroundBrush}" />
    </Style>-->


</ResourceDictionary>

<!--<tools:SharedResourceDictionary Source="/Ascon.Pilot.Theme;component/Themes/SharedResources/SharedResources.xaml"/>-->
<!--<tools:SharedResourceDictionary Source="/Ascon.Pilot.Theme;component/Themes/StandardControls/ComboBox.xaml"/>-->
<!--<tools:SharedResourceDictionary Source="/Ascon.Pilot.Theme;component/Themes/StandardControls/Calendar.xaml"/>-->
<!--<tools:SharedResourceDictionary Source="/Ascon.Pilot.Theme;component/Themes/ButtonEdit.xaml"/>-->
<!--<ResourceDictionary Source="/Ascon.Pilot.Theme;component/themes/sharedresources/sharedresources.xaml"/>-->
<!--<ResourceDictionary Source="/Ascon.Pilot.Theme;component/themes/standardcontrols.xaml"/>-->
<!--<ResourceDictionary Source="pack://application:,,,/Ascon.Pilot.CommonLib;component/styles/styles.xaml"/>-->
<!--<ResourceDictionary Source="/Ascon.Pilot.Theme;component/themes/standardcontrols/CheckBox.xaml"/>-->
<!--<ResourceDictionary Source="/Ascon.Pilot.CommonLib;component/styles/CommonStyles.xaml"/>-->
